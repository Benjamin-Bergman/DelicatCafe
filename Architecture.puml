@startuml

package app {
    class EntryPoint {
        + {static} void main(String[])
    }

    class SandwichShop {
        + SandwichShop(InventoriedFile<ToppingType>, InventoriedFile<BreadType>, InventoriedFile<DrinkType>, InventoriedFile<ExtraType>)
        + void runShop(InputStream, PrintStream)
    }

    SandwichShop <-- EntryPoint
}

package io {
    interface LineItem {
        + String getName()
        + double getPrice()
        + List<LineItem> getSubItems()
    }

    class Receipt {
        - LineItem item
        + Receipt(LineItem)
        + String toString()
        + boolean saveTo(File)
        + void processSale()
        + double getPrice()
    }

    interface Inventoried {
        + void consume(int)
        + boolean isInStock()
    }

    interface InventoriedLineItem extends LineItem {
        + Inventoried getInventoried()
    }

    interface InventoriedFile<T extends Inventoried> {
        + List<T> getItems()
    }

    abstract class BaseInventoriedFile<T extends BaseInventoried> implements InventoriedFile {
        - List<T> items
        - File file
        ~ void save()
        # BaseInventoriedFile(File)
        # {abstract} T readFromLine(String)
        # {abstract} String convertToLine(T)
        + List<T> getItems()
    }

    abstract BaseInventoried implements Inventoried {
        - BaseInventoriedFile<?> owner
        - int amount
        ~ int getAmount()
        ~ void setAmount(int )
        ~ void setOwner(BaseInventoried<?>)
        + void consume(int)
        + boolean isInStock()
    }

    LineItem "1" o-- Receipt
    LineItem "0..*" o-- LineItem
    BaseInventoried "0..*" *--o "1" BaseInventoriedFile
    Inventoried <- InventoriedFile
    Inventoried o-- InventoriedLineItem
}

package orders {
    enum SandwichSize {
        - String display
        + {static} FOUR_IN
        + {static} EIGHT_IN
        + {static} TWELVE_IN
        - SandwichSize(String)
        + String toString()
    }
    class SandwichItem <<io.LineItem>> {
        - SandwichSize size
        - boolean toasted
        - BreadItem bread
        - List<Topping> toppings
        __
        + Sandwich(SandwichSize, BreadType)
        + SandwichSize getSize()
        + void setSize(SandwichSize)
        + boolean isToasted()
        + void setToasted(boolean)
        + BreadType getBread()
        + void setBread(BreadType)
        + List<ToppingView> getToppings()
        + void addTopping(ToppingType, boolean)
        + void removeTopping(ToppingType, boolean)
        + String getName()
        + double getPrice()
        + List<LineItem> getSubItems()
    }
    ToppingView +-u- SandwichItem : Public Nested
    class ToppingView {
        - ToppingType type
        - boolean extra
        - ToppingView(ToppingType, boolean)
        + ToppingType getType()
        + boolean isExtra()
    }
    ToastedItem +-u- SandwichItem : Private Nested
    class ToastedItem <<io.LineItem>> {
        - ToastedItem()
        + String getName()
        + double getPrice()
        + List<LineItem> getSubItems()
    }
    class Order <<io.LineItem>> {
        - List<ExtraItem> extras
        - List<SandwichItem> sandwiches
        - List<DrinkItem> drinks
        + Order()
        + void addDrink(DrinkType, DrinkSize)
        + List<DrinkView> getDrinks()
        + void removeDrink(DrinkType, DrinkSize)
        + void addSandwich(SandwichItem)
        + List<SandwichItem> getSandwiches()
        + void removeSandwich(int)
        + void addExtra(ExtraType)
        + List<ExtraItem> getExtras()
        + void removeExtra(ExtraType)
        + String getName()
        + double getPrice()
        + List<LineItem> getSubItems()
    }
    DrinkView +-l- Order : Public Nested
    class DrinkView {
        - DrinkType type
        - DrinkSize size
        - ToppingView(DrinkItem)
        + DrinkType getType()
        + DrinkSize getSize()
    }

    package extras {
        class ExtraType <<io.BaseInventoried>> {
            - String name
            - double price
            ~ ExtraType(String, double)
            + String getName()
            + double getPrice()
        }
        class ExtraTypeFile <<io.BaseInventoriedFile>> {
            + ExtraTypeFile(File)
            + {abstract} {method} overrides
        }
        class ExtraItem <<io.InventoriedLineItem>> {
            - ExtraType type
            + ExtraItem(ExtraType)
            + ExtraType getType()
            + void setType(ExtraType)
            + List<LineItem> getSubItems()
            + String getName()
            + double getPrice()
            + Inventoried getInventoried()
        }

        ExtraType "0..*" *--o "1" ExtraTypeFile
    }

    package bread {
        class BreadType <<io.BaseInventoried>> {
            - String name
            ~ BreadType(String)
            + String getName()
        }
        class BreadTypeFile <<io.BaseInventoriedFile>> {
            + BreadTypeFile(File
            + {abstract} {method} overrides
        }
        class BreadItem <<io.InventoriedLineItem>> {
            - BreadType type
            + BreadItem(BreadType)
            + BreadType getType()
            + void setType(BreadType)
            + String getName()
            + double getPrice()
            + List<LineItem> getSubItems()
            + Inventoried getInventoried()
        }

        BreadType "0..*" *--o "1" BreadTypeFile
    }

    package drinks {
        enum DrinkSize {
            + {static} SMALL
            + {static} MEDIUM
            + {static} LARGE
            + String toString()
        }
        class DrinkType <<io.BaseInventoried>> {
            - String name
            - double[] prices
            ~ DrinkType(String, double[])
            + String getName()
            + double getPrice(DrinkSize)
        }
        class DrinkTypeFile <<io.BaseInventoriedFile>> {
            + DrinkTypeFile()
            + {abstract} {method} overrides
        }

        class DrinkItem <<io.InventoriedLineItem>> {
            - DrinkSize size
            - DrinkType type
            + Drink(DrinkSize, DrinkType)
            + DrinkSize getSize()
            + void setSize(DrinkSize)
            + DrinkType getType()
            + void setType(DrinkType)
            + String getName()
            + double getPrice()
            + List<LineItem> getSubItems()
            + Inventoried getInventoried()
        }

        DrinkType "0..*" *--o "1" DrinkTypeFile
    }

    package toppings {
        class ToppingType <<io.BaseInventoried>> {
            - String name
            - String category
            - double[] prices
            ~ ToppingType(String, String, double[])
            ~ double[] getPrices()
            + String getName()
            + String getCategory()
            + double getPrice(SandwichSize)
            + double getExtraPrice(SandwichSize)
        }
        class ToppingTypeFile <<io.BaseInventoriedFile>> {
            + ToppingTypeFile(File)
            + {abstract} {method} overrides
        }
        class ToppingItem <<io.InventoriedLineItem>> {
            - ToppingType type
            - SandwichSize size
            - boolean extra
            + Topping(ToppingType, SandwichSize, boolean)
            + ToppingType getType()
            + void setType(ToppingType)
            + boolean isExtra()
            + void setExtra(boolean)
            + SandwichSize getSize()
            + void setSize(SandwichSize)
            + String getName()
            + double getPrice()
            + List<LineItem> getSubItems()
            + Inventoried getInventoried()
        }

        ToppingType "0..*" *--o "1" ToppingTypeFile
    }

    SandwichSize "1" o-- SandwichItem
    BreadItem "1" *-- SandwichItem
    DrinkSize "1" o-- DrinkItem
    DrinkType "1" o-- DrinkItem
    ToppingItem "0..*" *-- SandwichItem
    ToppingType "1" o-- ToppingItem
    ExtraType "1" o-- ExtraItem
    BreadType "1" o-- BreadItem

    SandwichItem "0..*" *-- Order
    DrinkItem "0..*" *-- Order
    ExtraItem "0..*" *-- Order
}

@enduml